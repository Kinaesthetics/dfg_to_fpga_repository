Release 14.7 - xst P.20131013 (nt64)
Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
--> Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.09 secs
 
--> Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.09 secs
 
--> Reading design: AlU_EXPERIMENT_32.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Parsing
  3) HDL Elaboration
  4) HDL Synthesis
       4.1) HDL Synthesis Report
  5) Advanced HDL Synthesis
       5.1) Advanced HDL Synthesis Report
  6) Low Level Synthesis
  7) Partition Report
  8) Design Summary
       8.1) Primitive and Black Box Usage
       8.2) Device utilization summary
       8.3) Partition Resource Summary
       8.4) Timing Report
            8.4.1) Clock Information
            8.4.2) Asynchronous Control Signals Information
            8.4.3) Timing Summary
            8.4.4) Timing Details
            8.4.5) Cross Clock Domains Report


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "AlU_EXPERIMENT_32.prj"
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "AlU_EXPERIMENT_32"
Output Format                      : NGC
Target Device                      : xc6vlx75t-1-ff484

---- Source Options
Top Module Name                    : AlU_EXPERIMENT_32
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : No
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Shift Register Extraction          : YES
ROM Style                          : Auto
Resource Sharing                   : YES
Asynchronous To Synchronous        : NO
Shift Register Minimum Size        : 2
Use DSP Block                      : Auto
Automatic Register Balancing       : No

---- Target Options
LUT Combining                      : Auto
Reduce Control Sets                : Auto
Add IO Buffers                     : YES
Global Maximum Fanout              : 100000
Add Generic Clock Buffer(BUFG)     : 32
Register Duplication               : YES
Optimize Instantiated Primitives   : NO
Use Clock Enable                   : Auto
Use Synchronous Set                : Auto
Use Synchronous Reset              : Auto
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Power Reduction                    : NO
Keep Hierarchy                     : No
Netlist Hierarchy                  : As_Optimized
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
DSP48 Utilization Ratio            : 100
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

---- Other Options
Cores Search Directories           : {"ipcore_dir"  }

=========================================================================


=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\Xilinx_Project\Xilinx_Project_Workspace\ipcore_dir\fifo_32.vhd" into library work
Parsing entity <fifo_32>.
Parsing architecture <fifo_32_a> of entity <fifo_32>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\Xilinx_Project\Xilinx_Project_Workspace\ipcore_dir\fp_mult.vhd" into library work
Parsing entity <fp_mult>.
Parsing architecture <fp_mult_a> of entity <fp_mult>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\Xilinx_Project\Xilinx_Project_Workspace\ipcore_dir\fp_div.vhd" into library work
Parsing entity <fp_div>.
Parsing architecture <fp_div_a> of entity <fp_div>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\Xilinx_Project\Xilinx_Project_Workspace\ipcore_dir\fp_add.vhd" into library work
Parsing entity <fp_add>.
Parsing architecture <fp_add_a> of entity <fp_add>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\Xilinx_Project\Xilinx_Project_Workspace\ipcore_dir\fp_sub.vhd" into library work
Parsing entity <fp_sub>.
Parsing architecture <fp_sub_a> of entity <fp_sub>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\Xilinx_Project\Xilinx_Project_Workspace\ipcore_dir\mult.vhd" into library work
Parsing entity <mult>.
Parsing architecture <mult_a> of entity <mult>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\packages\opcodes.vhd" into library work
Parsing package <opcodes>.
Parsing package body <opcodes>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_xor.vhd" into library work
Parsing entity <shift_reg_xor>.
Parsing architecture <arc> of entity <shift_reg_xor>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_xnor.vhd" into library work
Parsing entity <shift_reg_xnor>.
Parsing architecture <arc> of entity <shift_reg_xnor>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_srl.vhd" into library work
Parsing entity <shift_reg_srl>.
Parsing architecture <arc> of entity <shift_reg_srl>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_sra.vhd" into library work
Parsing entity <shift_reg_sra>.
Parsing architecture <arc> of entity <shift_reg_sra>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_sll.vhd" into library work
Parsing entity <shift_reg_sll>.
Parsing architecture <arc> of entity <shift_reg_sll>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_sla.vhd" into library work
Parsing entity <shift_reg_sla>.
Parsing architecture <arc> of entity <shift_reg_sla>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_ror.vhd" into library work
Parsing entity <shift_reg_ror>.
Parsing architecture <arc> of entity <shift_reg_ror>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_rol.vhd" into library work
Parsing entity <shift_reg_rol>.
Parsing architecture <arc> of entity <shift_reg_rol>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_or.vhd" into library work
Parsing entity <shift_reg_or>.
Parsing architecture <arc> of entity <shift_reg_or>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_not.vhd" into library work
Parsing entity <shift_reg_not>.
Parsing architecture <arc> of entity <shift_reg_not>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_nor.vhd" into library work
Parsing entity <shift_reg_nor>.
Parsing architecture <arc> of entity <shift_reg_nor>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_mult.vhd" into library work
Parsing entity <shift_reg_mult>.
Parsing architecture <arc> of entity <shift_reg_mult>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_fsub.vhd" into library work
Parsing entity <shift_reg_fsub>.
Parsing architecture <arc> of entity <shift_reg_fsub>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_fmult.vhd" into library work
Parsing entity <shift_reg_fmult>.
Parsing architecture <arc> of entity <shift_reg_fmult>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_fdiv.vhd" into library work
Parsing entity <shift_reg_fdiv>.
Parsing architecture <arc> of entity <shift_reg_fdiv>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_fadd.vhd" into library work
Parsing entity <shift_reg_fadd>.
Parsing architecture <arc> of entity <shift_reg_fadd>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_and.vhd" into library work
Parsing entity <shift_reg_and>.
Parsing architecture <arc> of entity <shift_reg_and>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_add.vhd" into library work
Parsing entity <shift_reg_add>.
Parsing architecture <arc> of entity <shift_reg_add>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\xor_n.vhd" into library work
Parsing entity <xor_n>.
Parsing architecture <behave> of entity <xor_n>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\xnor_n.vhd" into library work
Parsing entity <xnor_n>.
Parsing architecture <behave> of entity <xnor_n>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\srl_n.vhd" into library work
Parsing entity <srl_n>.
Parsing architecture <behave> of entity <srl_n>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\sll_n.vhd" into library work
Parsing entity <sll_n>.
Parsing architecture <behave> of entity <sll_n>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\ror_n.vhd" into library work
Parsing entity <ror_n>.
Parsing architecture <behave> of entity <ror_n>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\rol_n.vhd" into library work
Parsing entity <rol_n>.
Parsing architecture <behave> of entity <rol_n>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\or_n.vhd" into library work
Parsing entity <or_n>.
Parsing architecture <behave> of entity <or_n>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\not_n.vhd" into library work
Parsing entity <not_n>.
Parsing architecture <behave> of entity <not_n>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\nor_n.vhd" into library work
Parsing entity <nor_n>.
Parsing architecture <behave> of entity <nor_n>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\and_n.vhd" into library work
Parsing entity <and_n>.
Parsing architecture <behave> of entity <and_n>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\arithmetic\integer\sra_n.vhd" into library work
Parsing entity <sra_n>.
Parsing architecture <behave> of entity <sra_n>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\arithmetic\integer\sla_n.vhd" into library work
Parsing entity <sla_n>.
Parsing architecture <behave> of entity <sla_n>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\arithmetic\integer\add_sub_n.vhd" into library work
Parsing entity <add_sub_n>.
Parsing architecture <behave> of entity <add_sub_n>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\Xilinx_Project\Xilinx_Project_Workspace\demux_32_to_1.vhd" into library work
Parsing entity <demux_32_to_1>.
Parsing architecture <Behavioral> of entity <demux_32_to_1>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\xor_reg.vhd" into library work
Parsing entity <xor_reg>.
Parsing architecture <BEHAVIORAL> of entity <xor_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\xnor_reg.vhd" into library work
Parsing entity <xnor_reg>.
Parsing architecture <behavioral> of entity <xnor_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\srl_reg.vhd" into library work
Parsing entity <srl_reg>.
Parsing architecture <behavioral> of entity <srl_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\sra_reg.vhd" into library work
Parsing entity <sra_reg>.
Parsing architecture <behavioral> of entity <sra_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\sll_reg.vhd" into library work
Parsing entity <sll_reg>.
Parsing architecture <behavioral> of entity <sll_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\sla_reg.vhd" into library work
Parsing entity <sla_reg>.
Parsing architecture <behavioral> of entity <sla_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\ror_reg.vhd" into library work
Parsing entity <ror_reg>.
Parsing architecture <behavioral> of entity <ror_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\rol_reg.vhd" into library work
Parsing entity <rol_reg>.
Parsing architecture <behavioral> of entity <rol_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\or_reg.vhd" into library work
Parsing entity <or_reg>.
Parsing architecture <behavioral> of entity <or_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\not_reg.vhd" into library work
Parsing entity <not_reg>.
Parsing architecture <behavioral> of entity <not_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\nor_reg.vhd" into library work
Parsing entity <nor_reg>.
Parsing architecture <behavioral> of entity <nor_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\mult_reg.vhd" into library work
Parsing entity <mult_reg>.
Parsing architecture <BEHAVIORAL> of entity <mult_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\fsub_reg.vhd" into library work
Parsing entity <fsub_reg>.
Parsing architecture <behavioral> of entity <fsub_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\fmult_reg.vhd" into library work
Parsing entity <fmult_reg>.
Parsing architecture <behavioral> of entity <fmult_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\fdiv_reg.vhd" into library work
Parsing entity <fdiv_reg>.
Parsing architecture <behavioral> of entity <fdiv_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\fadd_reg.vhd" into library work
Parsing entity <fadd_reg>.
Parsing architecture <behavioral> of entity <fadd_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\and_reg.vhd" into library work
Parsing entity <and_reg>.
Parsing architecture <behavioral> of entity <and_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\add_sub_reg.vhd" into library work
Parsing entity <add_sub_reg>.
Parsing architecture <behavioral> of entity <add_sub_reg>.
Parsing VHDL file "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" into library work
Parsing entity <AlU_EXPERIMENT_32>.
Parsing architecture <BEHAVIORAL> of entity <alu_experiment_32>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating entity <AlU_EXPERIMENT_32> (architecture <BEHAVIORAL>) with generics from library <work>.
WARNING:HDLCompiler:871 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 93: Using initial value "00000000000000000000000000000000" for r_nand since it is never assigned

Elaborating entity <demux_32_to_1> (architecture <Behavioral>) from library <work>.

Elaborating entity <fifo_32> (architecture <fifo_32_a>) from library <work>.

Elaborating entity <add_sub_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_add> (architecture <arc>) from library <work>.

Elaborating entity <add_sub_n> (architecture <behave>) with generics from library <work>.

Elaborating entity <mult_reg> (architecture <BEHAVIORAL>) with generics from library <work>.

Elaborating entity <shift_reg_mult> (architecture <arc>) from library <work>.

Elaborating entity <mult> (architecture <mult_a>) from library <work>.

Elaborating entity <or_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_or> (architecture <arc>) from library <work>.

Elaborating entity <or_n> (architecture <behave>) with generics from library <work>.

Elaborating entity <nor_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_nor> (architecture <arc>) from library <work>.

Elaborating entity <nor_n> (architecture <behave>) with generics from library <work>.

Elaborating entity <xor_reg> (architecture <BEHAVIORAL>) with generics from library <work>.

Elaborating entity <shift_reg_xor> (architecture <arc>) from library <work>.

Elaborating entity <xor_n> (architecture <behave>) with generics from library <work>.

Elaborating entity <xnor_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_xnor> (architecture <arc>) from library <work>.

Elaborating entity <xnor_n> (architecture <behave>) with generics from library <work>.

Elaborating entity <not_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_not> (architecture <arc>) from library <work>.

Elaborating entity <not_n> (architecture <behave>) with generics from library <work>.

Elaborating entity <sll_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_sll> (architecture <arc>) from library <work>.

Elaborating entity <sll_n> (architecture <behave>) with generics from library <work>.

Elaborating entity <srl_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_srl> (architecture <arc>) from library <work>.

Elaborating entity <srl_n> (architecture <behave>) with generics from library <work>.

Elaborating entity <sla_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_sla> (architecture <arc>) from library <work>.

Elaborating entity <sla_n> (architecture <behave>) with generics from library <work>.

Elaborating entity <sra_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_sra> (architecture <arc>) from library <work>.

Elaborating entity <sra_n> (architecture <behave>) with generics from library <work>.

Elaborating entity <ror_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_ror> (architecture <arc>) from library <work>.

Elaborating entity <ror_n> (architecture <behave>) with generics from library <work>.

Elaborating entity <rol_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_rol> (architecture <arc>) from library <work>.

Elaborating entity <rol_n> (architecture <behave>) with generics from library <work>.

Elaborating entity <fadd_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_fadd> (architecture <arc>) from library <work>.

Elaborating entity <fp_add> (architecture <fp_add_a>) from library <work>.

Elaborating entity <fsub_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_fsub> (architecture <arc>) from library <work>.

Elaborating entity <fp_sub> (architecture <fp_sub_a>) from library <work>.

Elaborating entity <fmult_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_fmult> (architecture <arc>) from library <work>.

Elaborating entity <fp_mult> (architecture <fp_mult_a>) from library <work>.

Elaborating entity <and_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_and> (architecture <arc>) from library <work>.
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_and.vhd" Line 19: data_in should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_and.vhd" Line 20: reg should be on the sensitivity list of the process

Elaborating entity <and_n> (architecture <behave>) with generics from library <work>.

Elaborating entity <fdiv_reg> (architecture <behavioral>) with generics from library <work>.

Elaborating entity <shift_reg_fdiv> (architecture <arc>) from library <work>.

Elaborating entity <fp_div> (architecture <fp_div_a>) from library <work>.
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 851: alu_operation_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 857: alu_operation_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 861: operation should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 874: r_add_sub should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 876: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 879: r_mult should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 885: r_or should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 888: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 891: r_nor should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 897: r_xor should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 900: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 903: r_xnor should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 906: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 909: r_not should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 912: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 915: r_sll should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 918: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 921: r_srl should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 924: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 927: r_sla should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 930: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 933: r_sra should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 936: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 939: r_ror should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 942: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 945: r_rol should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 948: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 951: r_fadd should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 953: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 958: r_fsub should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 961: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 964: r_fmult should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 967: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 970: r_fdiv should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 972: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 975: r_and should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 978: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 981: r_nand should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 983: input_ready should be on the sensitivity list of the process
WARNING:HDLCompiler:634 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 72: Net <result_ready[18]> does not have a driver.
WARNING:HDLCompiler:634 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" Line 119: Net <clock_buf14> does not have a driver.

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <AlU_EXPERIMENT_32>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd".
        data_width = 32
WARNING:Xst:647 - Input <en> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
INFO:Xst:3210 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" line 609: Output port <full> of the instance <PM_FIFO_32_16_A> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\alu\ALU_EXPERIMENT_32.vhd" line 620: Output port <full> of the instance <PM_FIFO_32_16_B> is unconnected or connected to loadless signal.
WARNING:Xst:2935 - Signal 'result_ready<18>', unconnected in block 'AlU_EXPERIMENT_32', is tied to its initial value (0).
WARNING:Xst:653 - Signal <clock_buf14> is used but never assigned. This sourceless signal will be automatically connected to value GND.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <in_ready<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<63>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<62>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<61>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<60>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<59>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<58>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<57>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<56>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<55>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<54>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<53>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<52>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<51>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<50>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<49>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<48>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<47>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<46>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<45>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<44>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<43>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<42>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<41>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<40>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<39>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<38>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<37>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<36>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<35>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<34>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<33>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<32>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred  82 Latch(s).
Unit <AlU_EXPERIMENT_32> synthesized.

Synthesizing Unit <demux_32_to_1>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\Xilinx_Project\Xilinx_Project_Workspace\demux_32_to_1.vhd".
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <clock_enable_output<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred  19 Latch(s).
	inferred  18 Multiplexer(s).
Unit <demux_32_to_1> synthesized.

Synthesizing Unit <add_sub_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\add_sub_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <add_sub_reg> synthesized.

Synthesizing Unit <shift_reg_add>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_add.vhd".
WARNING:Xst:737 - Found 1-bit latch for signal <add_sub_output_ready>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred   1 Latch(s).
	inferred   2 Multiplexer(s).
Unit <shift_reg_add> synthesized.

Synthesizing Unit <add_sub_n>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\arithmetic\integer\add_sub_n.vhd".
        bits = 32
    Found 33-bit register for signal <rst>.
    Found 33-bit adder for signal <A[31]_B[31]_add_0_OUT> created at line 37.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  33 D-type flip-flop(s).
Unit <add_sub_n> synthesized.

Synthesizing Unit <mult_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\mult_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <mult_reg> synthesized.

Synthesizing Unit <shift_reg_mult>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_mult.vhd".
    Found 1-bit register for signal <reg<2>>.
    Found 1-bit register for signal <reg<1>>.
    Found 1-bit register for signal <reg<0>>.
    Summary:
	inferred   3 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_mult> synthesized.

Synthesizing Unit <or_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\or_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <or_reg> synthesized.

Synthesizing Unit <shift_reg_or>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_or.vhd".
    Found 1-bit register for signal <reg<2>>.
    Found 1-bit register for signal <reg<1>>.
    Found 1-bit register for signal <reg<0>>.
    Summary:
	inferred   3 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_or> synthesized.

Synthesizing Unit <or_n>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\or_n.vhd".
        bits = 32
WARNING:Xst:737 - Found 1-bit latch for signal <Result<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred  32 Latch(s).
Unit <or_n> synthesized.

Synthesizing Unit <nor_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\nor_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <nor_reg> synthesized.

Synthesizing Unit <shift_reg_nor>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_nor.vhd".
    Found 1-bit register for signal <reg<2>>.
    Found 1-bit register for signal <reg<1>>.
    Found 1-bit register for signal <reg<0>>.
    Summary:
	inferred   3 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_nor> synthesized.

Synthesizing Unit <nor_n>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\nor_n.vhd".
        bits = 32
WARNING:Xst:737 - Found 1-bit latch for signal <Result<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred  32 Latch(s).
Unit <nor_n> synthesized.

Synthesizing Unit <xor_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\xor_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <xor_reg> synthesized.

Synthesizing Unit <shift_reg_xor>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_xor.vhd".
    Found 1-bit register for signal <reg<1>>.
    Found 1-bit register for signal <reg<0>>.
    Summary:
	inferred   2 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_xor> synthesized.

Synthesizing Unit <xor_n>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\xor_n.vhd".
        bits = 32
WARNING:Xst:737 - Found 1-bit latch for signal <Result<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred  32 Latch(s).
Unit <xor_n> synthesized.

Synthesizing Unit <xnor_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\xnor_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <xnor_reg> synthesized.

Synthesizing Unit <shift_reg_xnor>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_xnor.vhd".
    Found 1-bit register for signal <reg<1>>.
    Found 1-bit register for signal <reg<0>>.
    Summary:
	inferred   2 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_xnor> synthesized.

Synthesizing Unit <xnor_n>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\xnor_n.vhd".
        bits = 32
WARNING:Xst:737 - Found 1-bit latch for signal <Result<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred  32 Latch(s).
Unit <xnor_n> synthesized.

Synthesizing Unit <not_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\not_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <not_reg> synthesized.

Synthesizing Unit <shift_reg_not>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_not.vhd".
    Found 1-bit register for signal <reg_0>.
    Summary:
	inferred   1 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_not> synthesized.

Synthesizing Unit <not_n>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\not_n.vhd".
        bits = 32
WARNING:Xst:647 - Input <B> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred  32 Latch(s).
Unit <not_n> synthesized.

Synthesizing Unit <sll_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\sll_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <sll_reg> synthesized.

Synthesizing Unit <shift_reg_sll>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_sll.vhd".
    Found 1-bit register for signal <reg<1>>.
    Found 1-bit register for signal <reg<0>>.
    Summary:
	inferred   2 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_sll> synthesized.

Synthesizing Unit <sll_n>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\sll_n.vhd".
        bits = 32
WARNING:Xst:647 - Input <B<31:31>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 32-bit shifter logical left for signal <A[31]_B[30]_shift_left_0_OUT> created at line 34
WARNING:Xst:737 - Found 1-bit latch for signal <Result<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred  32 Latch(s).
	inferred   1 Multiplexer(s).
	inferred   1 Combinational logic shifter(s).
Unit <sll_n> synthesized.

Synthesizing Unit <srl_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\srl_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <srl_reg> synthesized.

Synthesizing Unit <shift_reg_srl>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_srl.vhd".
    Found 1-bit register for signal <reg<1>>.
    Found 1-bit register for signal <reg<0>>.
    Summary:
	inferred   2 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_srl> synthesized.

Synthesizing Unit <srl_n>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\srl_n.vhd".
        bits = 32
WARNING:Xst:647 - Input <B<31:31>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 32-bit shifter logical right for signal <A[31]_B[30]_shift_right_0_OUT> created at line 35
WARNING:Xst:737 - Found 1-bit latch for signal <Result<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred  32 Latch(s).
	inferred   1 Multiplexer(s).
	inferred   1 Combinational logic shifter(s).
Unit <srl_n> synthesized.

Synthesizing Unit <sla_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\sla_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <sla_reg> synthesized.

Synthesizing Unit <shift_reg_sla>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_sla.vhd".
    Found 1-bit register for signal <reg_0>.
    Summary:
	inferred   1 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_sla> synthesized.

Synthesizing Unit <sla_n>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\arithmetic\integer\sla_n.vhd".
        bits = 32
WARNING:Xst:647 - Input <B<31:31>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <clk> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 32-bit shifter logical left for signal <Result> created at line 12
    Summary:
	inferred   1 Multiplexer(s).
	inferred   1 Combinational logic shifter(s).
Unit <sla_n> synthesized.

Synthesizing Unit <sra_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\sra_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <sra_reg> synthesized.

Synthesizing Unit <shift_reg_sra>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_sra.vhd".
    Found 1-bit register for signal <reg<1>>.
    Found 1-bit register for signal <reg<0>>.
    Summary:
	inferred   2 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_sra> synthesized.

Synthesizing Unit <sra_n>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\arithmetic\integer\sra_n.vhd".
        bits = 32
WARNING:Xst:647 - Input <B<31:31>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <clk> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 32-bit shifter arithmetic right for signal <Result> created at line 13
    Summary:
	inferred   1 Multiplexer(s).
	inferred   1 Combinational logic shifter(s).
Unit <sra_n> synthesized.

Synthesizing Unit <ror_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\ror_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <ror_reg> synthesized.

Synthesizing Unit <shift_reg_ror>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_ror.vhd".
    Found 1-bit register for signal <reg<1>>.
    Found 1-bit register for signal <reg<0>>.
    Summary:
	inferred   2 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_ror> synthesized.

Synthesizing Unit <ror_n>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\ror_n.vhd".
        bits = 32
WARNING:Xst:647 - Input <B<31:31>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 32-bit shifter rotate right for signal <A[31]_B[30]_rotate_right_0_OUT> created at line 35
WARNING:Xst:737 - Found 1-bit latch for signal <Result<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred  32 Latch(s).
	inferred   1 Combinational logic shifter(s).
Unit <ror_n> synthesized.

Synthesizing Unit <rol_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\rol_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <rol_reg> synthesized.

Synthesizing Unit <shift_reg_rol>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_rol.vhd".
    Found 1-bit register for signal <reg<1>>.
    Found 1-bit register for signal <reg<0>>.
    Summary:
	inferred   2 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_rol> synthesized.

Synthesizing Unit <rol_n>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\rol_n.vhd".
        bits = 32
WARNING:Xst:647 - Input <B<31:31>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 32-bit shifter rotate left for signal <A[31]_B[30]_rotate_left_0_OUT> created at line 24
WARNING:Xst:737 - Found 1-bit latch for signal <Result<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred  32 Latch(s).
	inferred   1 Combinational logic shifter(s).
Unit <rol_n> synthesized.

Synthesizing Unit <fadd_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\fadd_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <fadd_reg> synthesized.

Synthesizing Unit <shift_reg_fadd>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_fadd.vhd".
    Found 1-bit register for signal <reg<13>>.
    Found 1-bit register for signal <reg<12>>.
    Found 1-bit register for signal <reg<11>>.
    Found 1-bit register for signal <reg<10>>.
    Found 1-bit register for signal <reg<9>>.
    Found 1-bit register for signal <reg<8>>.
    Found 1-bit register for signal <reg<7>>.
    Found 1-bit register for signal <reg<6>>.
    Found 1-bit register for signal <reg<5>>.
    Found 1-bit register for signal <reg<4>>.
    Found 1-bit register for signal <reg<3>>.
    Found 1-bit register for signal <reg<2>>.
    Found 1-bit register for signal <reg<1>>.
    Found 1-bit register for signal <reg<0>>.
    Summary:
	inferred  14 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_fadd> synthesized.

Synthesizing Unit <fsub_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\fsub_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <fsub_reg> synthesized.

Synthesizing Unit <shift_reg_fsub>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_fsub.vhd".
    Found 1-bit register for signal <reg<13>>.
    Found 1-bit register for signal <reg<12>>.
    Found 1-bit register for signal <reg<11>>.
    Found 1-bit register for signal <reg<10>>.
    Found 1-bit register for signal <reg<9>>.
    Found 1-bit register for signal <reg<8>>.
    Found 1-bit register for signal <reg<7>>.
    Found 1-bit register for signal <reg<6>>.
    Found 1-bit register for signal <reg<5>>.
    Found 1-bit register for signal <reg<4>>.
    Found 1-bit register for signal <reg<3>>.
    Found 1-bit register for signal <reg<2>>.
    Found 1-bit register for signal <reg<1>>.
    Found 1-bit register for signal <reg<0>>.
    Summary:
	inferred  14 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_fsub> synthesized.

Synthesizing Unit <fmult_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\fmult_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <fmult_reg> synthesized.

Synthesizing Unit <shift_reg_fmult>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_fmult.vhd".
    Found 1-bit register for signal <reg<9>>.
    Found 1-bit register for signal <reg<8>>.
    Found 1-bit register for signal <reg<7>>.
    Found 1-bit register for signal <reg<6>>.
    Found 1-bit register for signal <reg<5>>.
    Found 1-bit register for signal <reg<4>>.
    Found 1-bit register for signal <reg<3>>.
    Found 1-bit register for signal <reg<2>>.
    Found 1-bit register for signal <reg<1>>.
    Found 1-bit register for signal <reg<0>>.
    Summary:
	inferred  10 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_fmult> synthesized.

Synthesizing Unit <and_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\and_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <and_reg> synthesized.

Synthesizing Unit <shift_reg_and>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_and.vhd".
WARNING:Xst:737 - Found 1-bit latch for signal <reg<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <reg<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred   2 Latch(s).
	inferred   5 Multiplexer(s).
Unit <shift_reg_and> synthesized.

Synthesizing Unit <and_n>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\operators\logical\and_n.vhd".
        bits = 32
WARNING:Xst:737 - Found 1-bit latch for signal <Result<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <Result<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred  32 Latch(s).
Unit <and_n> synthesized.

Synthesizing Unit <fdiv_reg>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\composite_operators_registers\fdiv_reg.vhd".
        bits = 32
    Summary:
	no macro.
Unit <fdiv_reg> synthesized.

Synthesizing Unit <shift_reg_fdiv>.
    Related source file is "C:\Users\Kinaesthetic\Xilinx\dfg_to_fpga_repository-master\components\registers\shift_reg_fdiv.vhd".
    Found 1-bit register for signal <reg<29>>.
    Found 1-bit register for signal <reg<28>>.
    Found 1-bit register for signal <reg<27>>.
    Found 1-bit register for signal <reg<26>>.
    Found 1-bit register for signal <reg<25>>.
    Found 1-bit register for signal <reg<24>>.
    Found 1-bit register for signal <reg<23>>.
    Found 1-bit register for signal <reg<22>>.
    Found 1-bit register for signal <reg<21>>.
    Found 1-bit register for signal <reg<20>>.
    Found 1-bit register for signal <reg<19>>.
    Found 1-bit register for signal <reg<18>>.
    Found 1-bit register for signal <reg<17>>.
    Found 1-bit register for signal <reg<16>>.
    Found 1-bit register for signal <reg<15>>.
    Found 1-bit register for signal <reg<14>>.
    Found 1-bit register for signal <reg<13>>.
    Found 1-bit register for signal <reg<12>>.
    Found 1-bit register for signal <reg<11>>.
    Found 1-bit register for signal <reg<10>>.
    Found 1-bit register for signal <reg<9>>.
    Found 1-bit register for signal <reg<8>>.
    Found 1-bit register for signal <reg<7>>.
    Found 1-bit register for signal <reg<6>>.
    Found 1-bit register for signal <reg<5>>.
    Found 1-bit register for signal <reg<4>>.
    Found 1-bit register for signal <reg<3>>.
    Found 1-bit register for signal <reg<2>>.
    Found 1-bit register for signal <reg<1>>.
    Found 1-bit register for signal <reg<0>>.
    Summary:
	inferred  30 D-type flip-flop(s).
	inferred   1 Multiplexer(s).
Unit <shift_reg_fdiv> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# Adders/Subtractors                                   : 1
 33-bit adder                                          : 1
# Registers                                            : 94
 1-bit register                                        : 93
 33-bit register                                       : 1
# Latches                                              : 424
 1-bit latch                                           : 424
# Multiplexers                                         : 45
 1-bit 2-to-1 multiplexer                              : 27
 10-bit 2-to-1 multiplexer                             : 1
 14-bit 2-to-1 multiplexer                             : 2
 2-bit 2-to-1 multiplexer                              : 7
 3-bit 2-to-1 multiplexer                              : 3
 30-bit 2-to-1 multiplexer                             : 1
 32-bit 2-to-1 multiplexer                             : 4
# Logic shifters                                       : 6
 32-bit shifter arithmetic right                       : 1
 32-bit shifter logical left                           : 2
 32-bit shifter logical right                          : 1
 32-bit shifter rotate left                            : 1
 32-bit shifter rotate right                           : 1
# Xors                                                 : 2
 32-bit xor2                                           : 2

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================

Reading core <fifo_32.ngc>.
Reading core <mult.ngc>.
Reading Secure Unit <blk00000001>.
Reading core <ipcore_dir/fp_add.ngc>.
Reading core <ipcore_dir/fp_sub.ngc>.
Reading core <ipcore_dir/fp_mult.ngc>.
Reading core <ipcore_dir/fp_div.ngc>.
Loading core <fifo_32> for timing and area information for instance <PM_FIFO_32_16_A>.
Loading core <fifo_32> for timing and area information for instance <PM_FIFO_32_16_B>.
Loading core <mult> for timing and area information for instance <PM_MULT>.
Loading core <fp_add> for timing and area information for instance <PM_FADD>.
Loading core <fp_sub> for timing and area information for instance <PM_FSUB>.
Loading core <fp_mult> for timing and area information for instance <PM_FMULT>.
Loading core <fp_div> for timing and area information for instance <PM_DIV>.

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# Adders/Subtractors                                   : 1
 33-bit adder                                          : 1
# Registers                                            : 126
 Flip-Flops                                            : 126
# Multiplexers                                         : 45
 1-bit 2-to-1 multiplexer                              : 27
 10-bit 2-to-1 multiplexer                             : 1
 14-bit 2-to-1 multiplexer                             : 2
 2-bit 2-to-1 multiplexer                              : 7
 3-bit 2-to-1 multiplexer                              : 3
 30-bit 2-to-1 multiplexer                             : 1
 32-bit 2-to-1 multiplexer                             : 4
# Logic shifters                                       : 6
 32-bit shifter arithmetic right                       : 1
 32-bit shifter logical left                           : 2
 32-bit shifter logical right                          : 1
 32-bit shifter rotate left                            : 1
 32-bit shifter rotate right                           : 1
# Xors                                                 : 2
 32-bit xor2                                           : 2

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
WARNING:Xst:1710 - FF/Latch <clock_enable_output_30> (without init value) has a constant value of 0 in block <demux_32_to_1>. This FF/Latch will be trimmed during the optimization process.
INFO:Xst:1901 - Instance BUFGCE_inst_add_sub in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_MULT in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_OR in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_NOR in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_XOR in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_XNOR in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_NOT in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_SLL in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_SRL in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_SLA in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_SRA in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_ROR in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_ROL in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_FADD in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_FMULT in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_AND in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
INFO:Xst:1901 - Instance BUFGCE_inst_FDIV in unit AlU_EXPERIMENT_32 of type BUFGCE has been replaced by BUFGCTRL
WARNING:Xst:3001 - This design contains one or more registers or latches with an active
   asynchronous set and asynchronous reset. While this circuit can be built,
   it creates a sub-optimal implementation in terms of area, power and
   performance. For a more optimal implementation Xilinx highly recommends
   one of the following:

          1) Remove either the set or reset from all registers and latches if
             not needed for required functionality
          2) Modify the code in order to produce a synchronous set
             and/or reset (both is preferred)
          3) Use the -async_to_sync option to transform the asynchronous
             set/reset to synchronous operation
             (timing simulation highly recommended when using this option)

  Please refer to http://www.xilinx.com search string "Virtex6 asynchronous set/reset" for more details.

  List of register instances with asynchronous set and reset:
    PM_ROL/PM_ROL_READY_SIGNAL/reg_1 in unit <AlU_EXPERIMENT_32>
    PM_ROL/PM_ROL_READY_SIGNAL/reg_0 in unit <AlU_EXPERIMENT_32>
    PM_ROR/PM_ROR_READY_SIGNAL/reg_1 in unit <AlU_EXPERIMENT_32>
    PM_ROR/PM_ROR_READY_SIGNAL/reg_0 in unit <AlU_EXPERIMENT_32>
    PM_SRA/PM_NOR_READY_SIGNAL/reg_1 in unit <AlU_EXPERIMENT_32>
    PM_SRA/PM_NOR_READY_SIGNAL/reg_0 in unit <AlU_EXPERIMENT_32>
    PM_SLA/PM_SLA_READY_SIGNAL/reg_0 in unit <AlU_EXPERIMENT_32>
    PM_SRL/PM_NOR_READY_SIGNAL/reg_1 in unit <AlU_EXPERIMENT_32>
    PM_SRL/PM_NOR_READY_SIGNAL/reg_0 in unit <AlU_EXPERIMENT_32>
    PM_SLL/PM_NOR_READY_SIGNAL/reg_1 in unit <AlU_EXPERIMENT_32>
    PM_SLL/PM_NOR_READY_SIGNAL/reg_0 in unit <AlU_EXPERIMENT_32>
    PM_NOT/PM_NOT_READY_SIGNAL/reg_0 in unit <AlU_EXPERIMENT_32>
    PM_XNOR/PM_NOR_READY_SIGNAL/reg_1 in unit <AlU_EXPERIMENT_32>
    PM_XNOR/PM_NOR_READY_SIGNAL/reg_0 in unit <AlU_EXPERIMENT_32>
    PM_XOR/PM_XOR_READY_SIGNAL/reg_1 in unit <AlU_EXPERIMENT_32>
    PM_XOR/PM_XOR_READY_SIGNAL/reg_0 in unit <AlU_EXPERIMENT_32>
    reg_0 in unit <shift_reg_fdiv>
    reg_1 in unit <shift_reg_fdiv>
    reg_2 in unit <shift_reg_fdiv>
    reg_3 in unit <shift_reg_fdiv>
    reg_4 in unit <shift_reg_fdiv>
    reg_5 in unit <shift_reg_fdiv>
    reg_6 in unit <shift_reg_fdiv>
    reg_7 in unit <shift_reg_fdiv>
    reg_8 in unit <shift_reg_fdiv>
    reg_9 in unit <shift_reg_fdiv>
    reg_10 in unit <shift_reg_fdiv>
    reg_11 in unit <shift_reg_fdiv>
    reg_12 in unit <shift_reg_fdiv>
    reg_13 in unit <shift_reg_fdiv>
    reg_14 in unit <shift_reg_fdiv>
    reg_15 in unit <shift_reg_fdiv>
    reg_16 in unit <shift_reg_fdiv>
    reg_17 in unit <shift_reg_fdiv>
    reg_18 in unit <shift_reg_fdiv>
    reg_19 in unit <shift_reg_fdiv>
    reg_20 in unit <shift_reg_fdiv>
    reg_21 in unit <shift_reg_fdiv>
    reg_22 in unit <shift_reg_fdiv>
    reg_23 in unit <shift_reg_fdiv>
    reg_24 in unit <shift_reg_fdiv>
    reg_25 in unit <shift_reg_fdiv>
    reg_26 in unit <shift_reg_fdiv>
    reg_27 in unit <shift_reg_fdiv>
    reg_28 in unit <shift_reg_fdiv>
    reg_29 in unit <shift_reg_fdiv>
    reg_0 in unit <shift_reg_fmult>
    reg_1 in unit <shift_reg_fmult>
    reg_2 in unit <shift_reg_fmult>
    reg_3 in unit <shift_reg_fmult>
    reg_4 in unit <shift_reg_fmult>
    reg_5 in unit <shift_reg_fmult>
    reg_6 in unit <shift_reg_fmult>
    reg_7 in unit <shift_reg_fmult>
    reg_8 in unit <shift_reg_fmult>
    reg_9 in unit <shift_reg_fmult>
    reg_0 in unit <shift_reg_fsub>
    reg_1 in unit <shift_reg_fsub>
    reg_2 in unit <shift_reg_fsub>
    reg_3 in unit <shift_reg_fsub>
    reg_4 in unit <shift_reg_fsub>
    reg_5 in unit <shift_reg_fsub>
    reg_6 in unit <shift_reg_fsub>
    reg_7 in unit <shift_reg_fsub>
    reg_8 in unit <shift_reg_fsub>
    reg_9 in unit <shift_reg_fsub>
    reg_10 in unit <shift_reg_fsub>
    reg_11 in unit <shift_reg_fsub>
    reg_12 in unit <shift_reg_fsub>
    reg_13 in unit <shift_reg_fsub>
    reg_0 in unit <shift_reg_fadd>
    reg_1 in unit <shift_reg_fadd>
    reg_2 in unit <shift_reg_fadd>
    reg_3 in unit <shift_reg_fadd>
    reg_4 in unit <shift_reg_fadd>
    reg_5 in unit <shift_reg_fadd>
    reg_6 in unit <shift_reg_fadd>
    reg_7 in unit <shift_reg_fadd>
    reg_8 in unit <shift_reg_fadd>
    reg_9 in unit <shift_reg_fadd>
    reg_10 in unit <shift_reg_fadd>
    reg_11 in unit <shift_reg_fadd>
    reg_12 in unit <shift_reg_fadd>
    reg_13 in unit <shift_reg_fadd>
    reg_0 in unit <shift_reg_nor>
    reg_1 in unit <shift_reg_nor>
    reg_2 in unit <shift_reg_nor>
    reg_0 in unit <shift_reg_or>
    reg_1 in unit <shift_reg_or>
    reg_2 in unit <shift_reg_or>
    reg_0 in unit <shift_reg_mult>
    reg_1 in unit <shift_reg_mult>
    reg_2 in unit <shift_reg_mult>


Optimizing unit <add_sub_n> ...

Optimizing unit <AlU_EXPERIMENT_32> ...

Optimizing unit <demux_32_to_1> ...

Optimizing unit <shift_reg_mult> ...

Optimizing unit <shift_reg_or> ...

Optimizing unit <shift_reg_nor> ...

Optimizing unit <not_n> ...

Optimizing unit <shift_reg_fadd> ...

Optimizing unit <shift_reg_fsub> ...
WARNING:Xst:1293 - FF/Latch <reg_13> has a constant value of 0 in block <shift_reg_fsub>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <reg_12> has a constant value of 0 in block <shift_reg_fsub>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <reg_11> has a constant value of 0 in block <shift_reg_fsub>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <reg_10> has a constant value of 0 in block <shift_reg_fsub>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <reg_9> has a constant value of 0 in block <shift_reg_fsub>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <reg_8> has a constant value of 0 in block <shift_reg_fsub>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <reg_7> has a constant value of 0 in block <shift_reg_fsub>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <reg_6> has a constant value of 0 in block <shift_reg_fsub>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <reg_5> has a constant value of 0 in block <shift_reg_fsub>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <reg_4> has a constant value of 0 in block <shift_reg_fsub>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <reg_3> has a constant value of 0 in block <shift_reg_fsub>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <reg_2> has a constant value of 0 in block <shift_reg_fsub>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <reg_1> has a constant value of 0 in block <shift_reg_fsub>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <reg_0> has a constant value of 0 in block <shift_reg_fsub>. This FF/Latch will be trimmed during the optimization process.

Optimizing unit <shift_reg_fmult> ...

Optimizing unit <shift_reg_fdiv> ...
WARNING:Xst:2677 - Node <in_ready_14> of sequential type is unconnected in block <AlU_EXPERIMENT_32>.
WARNING:Xst:2677 - Node <Inst_demux_32_to_1/clock_enable_output_14> of sequential type is unconnected in block <AlU_EXPERIMENT_32>.

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 5) on block AlU_EXPERIMENT_32, actual ratio is 7.
INFO:Xst:2260 - The FF/Latch <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg_2> in Unit <PM_FIFO_32_16_B> is equivalent to the following FF/Latch : <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg_0> 
INFO:Xst:2260 - The FF/Latch <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i> in Unit <PM_FIFO_32_16_B> is equivalent to the following FF/Latch : <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_fb_i> 
INFO:Xst:2260 - The FF/Latch <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.rfwft/empty_fwft_i> in Unit <PM_FIFO_32_16_B> is equivalent to the following FF/Latch : <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.rfwft/empty_fwft_fb> 
INFO:Xst:2260 - The FF/Latch <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg_2> in Unit <PM_FIFO_32_16_A> is equivalent to the following FF/Latch : <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg_0> 
INFO:Xst:2260 - The FF/Latch <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i> in Unit <PM_FIFO_32_16_A> is equivalent to the following FF/Latch : <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_fb_i> 
INFO:Xst:2260 - The FF/Latch <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.rfwft/empty_fwft_i> in Unit <PM_FIFO_32_16_A> is equivalent to the following FF/Latch : <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.rfwft/empty_fwft_fb> 
INFO:Xst:2260 - The FF/Latch <blk000009de> in Unit <PM_FDIV/PM_DIV> is equivalent to the following FF/Latch : <blk00000d4d> 
INFO:Xst:2260 - The FF/Latch <blk000009c5> in Unit <PM_FDIV/PM_DIV> is equivalent to the following FF/Latch : <blk00000d4e> 
INFO:Xst:2260 - The FF/Latch <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg_2> in Unit <PM_FIFO_32_16_B> is equivalent to the following FF/Latch : <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg_0> 
INFO:Xst:2260 - The FF/Latch <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i> in Unit <PM_FIFO_32_16_B> is equivalent to the following FF/Latch : <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_fb_i> 
INFO:Xst:2260 - The FF/Latch <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.rfwft/empty_fwft_i> in Unit <PM_FIFO_32_16_B> is equivalent to the following FF/Latch : <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.rfwft/empty_fwft_fb> 
INFO:Xst:2260 - The FF/Latch <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg_2> in Unit <PM_FIFO_32_16_A> is equivalent to the following FF/Latch : <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg_0> 
INFO:Xst:2260 - The FF/Latch <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i> in Unit <PM_FIFO_32_16_A> is equivalent to the following FF/Latch : <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_fb_i> 
INFO:Xst:2260 - The FF/Latch <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.rfwft/empty_fwft_i> in Unit <PM_FIFO_32_16_A> is equivalent to the following FF/Latch : <U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.rfwft/empty_fwft_fb> 
INFO:Xst:2260 - The FF/Latch <blk000009de> in Unit <PM_FDIV/PM_DIV> is equivalent to the following FF/Latch : <blk00000d4d> 
INFO:Xst:2260 - The FF/Latch <blk000009c5> in Unit <PM_FDIV/PM_DIV> is equivalent to the following FF/Latch : <blk00000d4e> 

Final Macro Processing ...

Processing Unit <AlU_EXPERIMENT_32> :
INFO:Xst:741 - HDL ADVISOR - A 14-bit shift register was found for signal <PM_FADD/PM_FADD_READY_SIGNAL/reg_0> and currently occupies 14 logic cells (7 slices). Removing the set/reset logic would take advantage of SRL32 (and derived) primitives and reduce this to 1 logic cells (1 slices). Evaluate if the set/reset can be removed for this simple shift register. The majority of simple pipeline structures do not need to be set/reset operationally.
INFO:Xst:741 - HDL ADVISOR - A 10-bit shift register was found for signal <PM_FMULT/PM_FMULT_READY_SIGNAL/reg_0> and currently occupies 10 logic cells (5 slices). Removing the set/reset logic would take advantage of SRL32 (and derived) primitives and reduce this to 1 logic cells (1 slices). Evaluate if the set/reset can be removed for this simple shift register. The majority of simple pipeline structures do not need to be set/reset operationally.
INFO:Xst:741 - HDL ADVISOR - A 30-bit shift register was found for signal <PM_FDIV/PM_DIV_READY_SIGNAL/reg_0> and currently occupies 30 logic cells (15 slices). Removing the set/reset logic would take advantage of SRL32 (and derived) primitives and reduce this to 1 logic cells (1 slices). Evaluate if the set/reset can be removed for this simple shift register. The majority of simple pipeline structures do not need to be set/reset operationally.
Unit <AlU_EXPERIMENT_32> processed.

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 112
 Flip-Flops                                            : 112

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Top Level Output File Name         : AlU_EXPERIMENT_32.ngc

Primitive and Black Box Usage:
------------------------------
# BELS                             : 10093
#      GND                         : 10
#      INV                         : 51
#      LUT1                        : 65
#      LUT2                        : 1064
#      LUT3                        : 1120
#      LUT4                        : 1088
#      LUT5                        : 191
#      LUT6                        : 671
#      MULT_AND                    : 753
#      MUXCY                       : 2562
#      MUXF7                       : 28
#      MUXF8                       : 2
#      VCC                         : 9
#      XORCY                       : 2479
# FlipFlops/Latches                : 3860
#      FD                          : 590
#      FDC                         : 85
#      FDCE                        : 74
#      FDE                         : 2364
#      FDP                         : 26
#      FDPE                        : 2
#      FDRE                        : 298
#      LD                          : 340
#      LDCE                        : 17
#      LDE                         : 64
# RAMS                             : 2
#      RAMB36E1                    : 2
# Shift Registers                  : 162
#      SRL16E                      : 29
#      SRLC16E                     : 113
#      SRLC32E                     : 20
# Clock Buffers                    : 18
#      BUFG                        : 1
#      BUFGCTRL                    : 17
# IO Buffers                       : 140
#      IBUF                        : 74
#      IBUFG                       : 1
#      OBUF                        : 65

Device utilization summary:
---------------------------

Selected Device : 6vlx75tff484-1 


Slice Logic Utilization: 
 Number of Slice Registers:            3796  out of  93120     4%  
 Number of Slice LUTs:                 4412  out of  46560     9%  
    Number used as Logic:              4250  out of  46560     9%  
    Number used as Memory:              162  out of  16720     0%  
       Number used as SRL:              162

Slice Logic Distribution: 
 Number of LUT Flip Flop pairs used:   5675
   Number with an unused Flip Flop:    1879  out of   5675    33%  
   Number with an unused LUT:          1263  out of   5675    22%  
   Number of fully used LUT-FF pairs:  2533  out of   5675    44%  
   Number of unique control sets:        66

IO Utilization: 
 Number of IOs:                         141
 Number of bonded IOBs:                 140  out of    240    58%  
    IOB Flip Flops/Latches:              64

Specific Feature Utilization:
 Number of Block RAM/FIFO:                2  out of    156     1%  
    Number using Block RAM only:          2
 Number of BUFG/BUFGCTRLs:               18  out of     32    56%  

---------------------------
Partition Resource Summary:
---------------------------

  No Partitions were found in this design.

---------------------------


=========================================================================
Timing Report

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
---------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------+-------+
Clock Signal                                                                                                   | Clock buffer(FF name)                                           | Load  |
---------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------+-------+
alu_operation_ready(alu_operation_ready1:O)                                                                    | NONE(*)(in_ready_17)                                            | 17    |
_n0254(out3:O)                                                                                                 | NONE(*)(output_63)                                              | 64    |
PM_add_sub/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_7_o(PM_add_sub/PM_ADD_SUB_READY_SIGNAL/Mmux_rst_clk_MUX_7_o11:O)| NONE(*)(PM_add_sub/PM_ADD_SUB_READY_SIGNAL/add_sub_output_ready)| 1     |
clk                                                                                                            | IBUFG+BUFGCTRL                                                  | 3340  |
PM_AND/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_2734_o(PM_AND/PM_ADD_SUB_READY_SIGNAL/Mmux_rst_clk_MUX_2734_o11:O)  | NONE(*)(PM_AND/PM_ADD_SUB_READY_SIGNAL/reg_1)                   | 2     |
Inst_demux_32_to_1/_n0075(Inst_demux_32_to_1/out:O)                                                            | NONE(*)(Inst_demux_32_to_1/clock_enable_output_0)               | 17    |
clock_buf14                                                                                                    | NONE(PM_FSUB/PM_FSUB/blk00000003)                               | 583   |
---------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------+-------+
(*) These 5 clock signal(s) are generated by combinatorial logic,
and XST is not able to identify which are the primary clock signals.
Please use the CLOCK_SIGNAL constraint to specify the clock signal(s) generated by combinatorial logic.
INFO:Xst:2169 - HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.

Asynchronous Control Signals Information:
----------------------------------------

Control Signal                                                                                                                                                                                                                                                                                                        | Buffer(FF name)                                                                                                                                                                                             | Load  |

PM_FIFO_32_16_A/U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/gnativebmg.native_blk_mem_gen/valid.cstr/DBITERR(PM_FIFO_32_16_A/U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/gnativebmg.native_blk_mem_gen/valid.cstr/XST_GND:G)| NONE(PM_FIFO_32_16_A/U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/v6_noinit.ram/SDP.SIMPLE_PRIM36.ram)| 2     |
PM_FIFO_32_16_B/U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/gnativebmg.native_blk_mem_gen/valid.cstr/DBITERR(PM_FIFO_32_16_B/U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/gnativebmg.native_blk_mem_gen/valid.cstr/XST_GND:G)| NONE(PM_FIFO_32_16_B/U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/v6_noinit.ram/SDP.SIMPLE_PRIM36.ram)| 2     |


Timing Summary:
---------------
Speed Grade: -1

   Minimum period: 7.244ns (Maximum Frequency: 138.045MHz)
   Minimum input arrival time before clock: 3.239ns
   Maximum output required time after clock: 2.469ns
   Maximum combinational path delay: No path found

Timing Details:
---------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'clk'
  Clock period: 7.244ns (frequency: 138.045MHz)
  Total number of paths / destination ports: 11881709130 / 3863
-------------------------------------------------------------------------
Delay:               7.244ns (Levels of Logic = 74)
  Source:            PM_FIFO_32_16_A/U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/dout_i_0 (FF)
  Destination:       sec_inst (FF)
  Source Clock:      clk rising
  Destination Clock: clk rising

  Data Path: PM_FIFO_32_16_A/U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/dout_i_0 to sec_inst
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDRE:C->Q            64   0.375   0.798  U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/dout_i_0 (dout<0>)
     end scope: 'PM_FIFO_32_16_A:dout<0>'
     begin scope: 'PM_MULT/PM_MULT:a<0>'
     begin scope: 'PM_MULT/PM_MULT/blk00000001:A<0>'
     SEC:in->out           1   0.068   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.290   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           0   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.239   0.491  sec_inst (sec_net)
     SEC:in->out           1   0.068   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.290   0.000  sec_inst (sec_net)
     SEC:in->out           0   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.239   0.491  sec_inst (sec_net)
     SEC:in->out           1   0.068   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.290   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.020   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.020   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.020   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.239   0.491  sec_inst (sec_net)
     SEC:in->out           1   0.068   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.290   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.020   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.020   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.020   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.020   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.020   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.020   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.020   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.020   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.239   0.491  sec_inst (sec_net)
     SEC:in->out           1   0.068   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.290   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.020   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.020   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           0   0.019   0.000  sec_inst (sec_net)
     SEC:in->out           1   0.239   0.000  sec_inst (sec_net)
     SEC:in                    0.011          sec_inst
    ----------------------------------------
    Total                      7.244ns (4.482ns logic, 2.762ns route)
                                       (61.9% logic, 38.1% route)

=========================================================================
Timing constraint: Default period analysis for Clock 'PM_AND/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_2734_o'
  Clock period: 0.952ns (frequency: 1050.420MHz)
  Total number of paths / destination ports: 3 / 2
-------------------------------------------------------------------------
Delay:               0.952ns (Levels of Logic = 1)
  Source:            PM_AND/PM_ADD_SUB_READY_SIGNAL/reg_1 (LATCH)
  Destination:       PM_AND/PM_ADD_SUB_READY_SIGNAL/reg_1 (LATCH)
  Source Clock:      PM_AND/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_2734_o falling
  Destination Clock: PM_AND/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_2734_o falling

  Data Path: PM_AND/PM_ADD_SUB_READY_SIGNAL/reg_1 to PM_AND/PM_ADD_SUB_READY_SIGNAL/reg_1
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     LD:G->Q               2   0.387   0.497  PM_AND/PM_ADD_SUB_READY_SIGNAL/reg_1 (PM_AND/PM_ADD_SUB_READY_SIGNAL/reg_1)
     LUT4:I2->O            1   0.068   0.000  PM_AND/PM_ADD_SUB_READY_SIGNAL/Mmux_reg[1]_reg[1]_MUX_2728_o11 (PM_AND/PM_ADD_SUB_READY_SIGNAL/reg[1]_reg[1]_MUX_2728_o)
     LD:D                     -0.047          PM_AND/PM_ADD_SUB_READY_SIGNAL/reg_1
    ----------------------------------------
    Total                      0.952ns (0.455ns logic, 0.497ns route)
                                       (47.8% logic, 52.2% route)

=========================================================================
Timing constraint: Default period analysis for Clock 'clock_buf14'
  Clock period: 2.211ns (frequency: 452.284MHz)
  Total number of paths / destination ports: 3477 / 502
-------------------------------------------------------------------------
Delay:               2.211ns (Levels of Logic = 4)
  Source:            PM_FSUB/PM_FSUB/blk00000141 (FF)
  Destination:       PM_FSUB/PM_FSUB/blk00000148 (FF)
  Source Clock:      clock_buf14 rising
  Destination Clock: clock_buf14 rising

  Data Path: PM_FSUB/PM_FSUB/blk00000141 to PM_FSUB/PM_FSUB/blk00000148
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDE:C->Q              1   0.375   0.775  blk00000141 (sig000002dc)
     LUT5:I0->O            1   0.068   0.491  blk0000042f (sig0000046e)
     LUT3:I1->O            1   0.068   0.000  blk00000431 (sig000002c4)
     MUXF7:I1->O           1   0.248   0.000  blk00000137 (sig000002bb)
     MUXF8:I0->O           1   0.175   0.000  blk00000135 (sig000002b9)
     FDE:D                     0.011          blk00000148
    ----------------------------------------
    Total                      2.211ns (0.945ns logic, 1.266ns route)
                                       (42.7% logic, 57.3% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'alu_operation_ready'
  Total number of paths / destination ports: 304 / 34
-------------------------------------------------------------------------
Offset:              2.115ns (Levels of Logic = 3)
  Source:            Operation<4> (PAD)
  Destination:       in_ready_17 (LATCH)
  Destination Clock: alu_operation_ready falling

  Data Path: Operation<4> to in_ready_17
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            32   0.003   0.791  Operation_4_IBUF (Operation_4_IBUF)
     LUT4:I0->O            1   0.068   0.417  _n0253_SW0 (N58)
     LUT6:I5->O           17   0.068   0.505  _n0253 (_n0253)
     LDCE:GE                   0.263          in_ready_17
    ----------------------------------------
    Total                      2.115ns (0.402ns logic, 1.713ns route)
                                       (19.0% logic, 81.0% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock '_n0254'
  Total number of paths / destination ports: 1515 / 64
-------------------------------------------------------------------------
Offset:              3.239ns (Levels of Logic = 5)
  Source:            Operation<1> (PAD)
  Destination:       output_19 (LATCH)
  Destination Clock: _n0254 falling

  Data Path: Operation<1> to output_19
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O           152   0.003   0.957  Operation_1_IBUF (Operation_1_IBUF)
     LUT6:I0->O           52   0.068   0.935  GND_9_o_Operation[7]_equal_12_o<7>11 (GND_9_o_Operation[7]_equal_12_o<7>1)
     LUT6:I0->O            1   0.068   0.581  PWR_9_o_GND_9_o_Select_154_o<19>2 (PWR_9_o_GND_9_o_Select_154_o<19>1)
     LUT6:I3->O            1   0.068   0.491  PWR_9_o_GND_9_o_Select_154_o<19>4 (PWR_9_o_GND_9_o_Select_154_o<19>3)
     LUT4:I2->O            1   0.068   0.000  PWR_9_o_GND_9_o_Select_154_o<19>10 (PWR_9_o_GND_9_o_Select_154_o)
     LDE:D                    -0.047          output_19
    ----------------------------------------
    Total                      3.239ns (0.275ns logic, 2.964ns route)
                                       (8.5% logic, 91.5% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'PM_add_sub/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_7_o'
  Total number of paths / destination ports: 1 / 1
-------------------------------------------------------------------------
Offset:              0.729ns (Levels of Logic = 2)
  Source:            rst (PAD)
  Destination:       PM_add_sub/PM_ADD_SUB_READY_SIGNAL/add_sub_output_ready (LATCH)
  Destination Clock: PM_add_sub/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_7_o falling

  Data Path: rst to PM_add_sub/PM_ADD_SUB_READY_SIGNAL/add_sub_output_ready
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            96   0.003   0.658  rst_IBUF (rst_IBUF)
     LUT2:I0->O            1   0.068   0.000  PM_add_sub/PM_ADD_SUB_READY_SIGNAL/Mmux_add_sub_output_ready_add_sub_output_ready_MUX_5_o11 (PM_add_sub/PM_ADD_SUB_READY_SIGNAL/add_sub_output_ready_add_sub_output_ready_MUX_5_o)
     LD:D                     -0.047          PM_add_sub/PM_ADD_SUB_READY_SIGNAL/add_sub_output_ready
    ----------------------------------------
    Total                      0.729ns (0.071ns logic, 0.658ns route)
                                       (9.7% logic, 90.3% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'PM_AND/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_2734_o'
  Total number of paths / destination ports: 2 / 2
-------------------------------------------------------------------------
Offset:              0.876ns (Levels of Logic = 2)
  Source:            rst (PAD)
  Destination:       PM_AND/PM_ADD_SUB_READY_SIGNAL/reg_1 (LATCH)
  Destination Clock: PM_AND/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_2734_o falling

  Data Path: rst to PM_AND/PM_ADD_SUB_READY_SIGNAL/reg_1
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            96   0.003   0.805  rst_IBUF (rst_IBUF)
     LUT4:I0->O            1   0.068   0.000  PM_AND/PM_ADD_SUB_READY_SIGNAL/Mmux_reg[1]_reg[1]_MUX_2728_o11 (PM_AND/PM_ADD_SUB_READY_SIGNAL/reg[1]_reg[1]_MUX_2728_o)
     LD:D                     -0.047          PM_AND/PM_ADD_SUB_READY_SIGNAL/reg_1
    ----------------------------------------
    Total                      0.876ns (0.071ns logic, 0.805ns route)
                                       (8.1% logic, 91.9% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'clk'
  Total number of paths / destination ports: 1859 / 242
-------------------------------------------------------------------------
Offset:              1.752ns (Levels of Logic = 3)
  Source:            input_ready (PAD)
  Destination:       PM_FIFO_32_16_B/U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/v6_noinit.ram/SDP.SIMPLE_PRIM36.ram (RAM)
  Destination Clock: clk rising

  Data Path: input_ready to PM_FIFO_32_16_B/U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/v6_noinit.ram/SDP.SIMPLE_PRIM36.ram
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            21   0.003   0.621  input_ready_IBUF (input_ready_IBUF)
     begin scope: 'PM_FIFO_32_16_B:wr_en'
     LUT2:I0->O           24   0.068   0.545  U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/ram_wr_en_i1 (U0/xst_fifo_generator/gconvfifo.rf/grf.rf/ram_wr_en)
     begin scope: 'PM_FIFO_32_16_B/U0/xst_fifo_generator/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/gnativebmg.native_blk_mem_gen/valid.cstr:WEA<0>'
     RAMB36E1:WEA3             0.515          ramloop[0].ram.r/v6_noinit.ram/SDP.SIMPLE_PRIM36.ram
    ----------------------------------------
    Total                      1.752ns (0.586ns logic, 1.166ns route)
                                       (33.4% logic, 66.6% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'Inst_demux_32_to_1/_n0075'
  Total number of paths / destination ports: 102 / 17
-------------------------------------------------------------------------
Offset:              1.041ns (Levels of Logic = 2)
  Source:            Operation<2> (PAD)
  Destination:       Inst_demux_32_to_1/clock_enable_output_0 (LATCH)
  Destination Clock: Inst_demux_32_to_1/_n0075 falling

  Data Path: Operation<2> to Inst_demux_32_to_1/clock_enable_output_0
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O           212   0.003   0.970  Operation_2_IBUF (Operation_2_IBUF)
     LUT6:I0->O            1   0.068   0.000  Inst_demux_32_to_1/Mmux__n041511 (Inst_demux_32_to_1/_n0415)
     LD:D                     -0.047          Inst_demux_32_to_1/clock_enable_output_9
    ----------------------------------------
    Total                      1.041ns (0.071ns logic, 0.970ns route)
                                       (6.8% logic, 93.2% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock '_n0254'
  Total number of paths / destination ports: 64 / 64
-------------------------------------------------------------------------
Offset:              0.789ns (Levels of Logic = 1)
  Source:            output_63 (LATCH)
  Destination:       Result<63> (PAD)
  Source Clock:      _n0254 falling

  Data Path: output_63 to Result<63>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     LDE:G->Q              1   0.387   0.399  output_63 (output_63)
     OBUF:I->O                 0.003          Result_63_OBUF (Result<63>)
    ----------------------------------------
    Total                      0.789ns (0.390ns logic, 0.399ns route)
                                       (49.4% logic, 50.6% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'clk'
  Total number of paths / destination ports: 15 / 1
-------------------------------------------------------------------------
Offset:              2.469ns (Levels of Logic = 3)
  Source:            PM_XNOR/PM_NOR_READY_SIGNAL/reg_0 (FF)
  Destination:       output_ready (PAD)
  Source Clock:      clk rising

  Data Path: PM_XNOR/PM_NOR_READY_SIGNAL/reg_0 to output_ready
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDC:C->Q              1   0.375   0.778  PM_XNOR/PM_NOR_READY_SIGNAL/reg_0 (PM_XNOR/PM_NOR_READY_SIGNAL/reg_0)
     LUT6:I0->O            1   0.068   0.778  output_ready<0>1 (output_ready<0>)
     LUT6:I0->O            1   0.068   0.399  output_ready<0>4 (output_ready_OBUF)
     OBUF:I->O                 0.003          output_ready_OBUF (output_ready)
    ----------------------------------------
    Total                      2.469ns (0.514ns logic, 1.955ns route)
                                       (20.8% logic, 79.2% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'PM_add_sub/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_7_o'
  Total number of paths / destination ports: 1 / 1
-------------------------------------------------------------------------
Offset:              1.632ns (Levels of Logic = 2)
  Source:            PM_add_sub/PM_ADD_SUB_READY_SIGNAL/add_sub_output_ready (LATCH)
  Destination:       output_ready (PAD)
  Source Clock:      PM_add_sub/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_7_o falling

  Data Path: PM_add_sub/PM_ADD_SUB_READY_SIGNAL/add_sub_output_ready to output_ready
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     LD:G->Q               1   0.387   0.775  PM_add_sub/PM_ADD_SUB_READY_SIGNAL/add_sub_output_ready (PM_add_sub/PM_ADD_SUB_READY_SIGNAL/add_sub_output_ready)
     LUT6:I1->O            1   0.068   0.399  output_ready<0>4 (output_ready_OBUF)
     OBUF:I->O                 0.003          output_ready_OBUF (output_ready)
    ----------------------------------------
    Total                      1.632ns (0.458ns logic, 1.174ns route)
                                       (28.1% logic, 71.9% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'PM_AND/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_2734_o'
  Total number of paths / destination ports: 1 / 1
-------------------------------------------------------------------------
Offset:              1.444ns (Levels of Logic = 2)
  Source:            PM_AND/PM_ADD_SUB_READY_SIGNAL/reg_0 (LATCH)
  Destination:       output_ready (PAD)
  Source Clock:      PM_AND/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_2734_o falling

  Data Path: PM_AND/PM_ADD_SUB_READY_SIGNAL/reg_0 to output_ready
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     LD:G->Q               2   0.387   0.587  PM_AND/PM_ADD_SUB_READY_SIGNAL/reg_0 (PM_AND/PM_ADD_SUB_READY_SIGNAL/reg_0)
     LUT6:I3->O            1   0.068   0.399  output_ready<0>4 (output_ready_OBUF)
     OBUF:I->O                 0.003          output_ready_OBUF (output_ready)
    ----------------------------------------
    Total                      1.444ns (0.458ns logic, 0.986ns route)
                                       (31.7% logic, 68.3% route)

=========================================================================

Cross Clock Domains Report:
--------------------------

Clock to Setup on destination clock PM_AND/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_2734_o
-------------------------------------------------+---------+---------+---------+---------+
                                                 | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock                                     |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
-------------------------------------------------+---------+---------+---------+---------+
PM_AND/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_2734_o|         |         |    0.952|         |
alu_operation_ready                              |         |         |    0.872|         |
-------------------------------------------------+---------+---------+---------+---------+

Clock to Setup on destination clock PM_add_sub/PM_ADD_SUB_READY_SIGNAL/rst_clk_MUX_7_o
-------------------+---------+---------+---------+---------+
                   | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock       |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
-------------------+---------+---------+---------+---------+
alu_operation_ready|         |         |    0.872|         |
-------------------+---------+---------+---------+---------+

Clock to Setup on destination clock _n0254
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    5.391|         |
clock_buf14    |         |         |    1.927|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock alu_operation_ready
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.879|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock clk
-------------------+---------+---------+---------+---------+
                   | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock       |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
-------------------+---------+---------+---------+---------+
alu_operation_ready|         |    0.797|         |         |
clk                |    7.244|         |    3.253|         |
-------------------+---------+---------+---------+---------+

Clock to Setup on destination clock clock_buf14
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |    1.927|         |         |         |
clock_buf14    |    2.211|         |         |         |
---------------+---------+---------+---------+---------+

=========================================================================


Total REAL time to Xst completion: 22.00 secs
Total CPU time to Xst completion: 21.78 secs
 
--> 

Total memory usage is 347868 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings :  498 (   0 filtered)
Number of infos    :   39 (   0 filtered)

